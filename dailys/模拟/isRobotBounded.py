# -*- coding: utf-8 -*-

"""
@File    : isRobotBounded.py
@Author  : wenhao
@Time    : 2023/4/11 8:46
@LC      : 1041
"""
from collections import Counter


class Solution:
    # fuck üòñ Êú∫Âô®‰∫∫ÊÉ≥Ë¶ÅÊëÜËÑ±Âæ™ÁéØÔºåÂú®‰∏Ä‰∏≤Êåá‰ª§‰πãÂêéÁöÑÁä∂ÊÄÅÔºåÂøÖÈ°ªÊòØ‰∏ç‰Ωç‰∫éÂéüÁÇπ‰∏îÊñπÂêëÊúùÂåó
    # ÊàëÁöÑÊÄùË∑Ø
    # ÂàÜÊûêÊú∫Âô®‰∫∫ÁöÑÁßªÂä®ÊÄßË¥®
    # Â¶ÇÊûúÊúâÁéØ ÁßªÂä® 4 Ê¨°ÂøÖÁÑ∂ÂõûÂà∞ÂéüÁÇπ ÊñπÂêë‰πü‰∏ÄËá¥
    # ÁîöËá≥ 2 Ê¨°Â∞±ÊúâÂèØËÉΩÂõûÂà∞ÂéüÁÇπ
    def isRobotBounded(self, instructions: str) -> bool:
        # d = [0, 1, 2, 3]  # Âåó ‰∏ú Âçó Ë•ø

        move = [0, 0, 0]  # ÂùêÊ†á 0,0  ÊñπÂêë 0
        for _ in range(4):
            for ch in instructions:
                if ch == 'L':
                    move[2] = (move[2] + 3) % 4
                if ch == 'R':
                    move[2] = (move[2] + 1) % 4
                if ch == 'G':
                    if move[2] == 0:
                        move[1] += 1
                    if move[2] == 1:
                        move[0] += 1
                    if move[2] == 2:
                        move[1] -= 1
                    if move[2] == 3:
                        move[0] -= 1
        return all(x == 0 for x in move)  # Âà§Êñ≠ÊòØÂê¶ÂõûÂà∞ÂéüÁÇπ














